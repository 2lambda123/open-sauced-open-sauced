/** @type {import("snowpack").SnowpackUserConfig } */
export default {
  mount: {
    public: { url: '/', static: true },
    src: { url: '/dist' },
  },
  plugins: [
    '@snowpack/plugin-react-refresh',
    '@snowpack/plugin-dotenv',
    [
      '@snowpack/plugin-typescript',
      {
        /* Yarn PnP workaround: see https://www.npmjs.com/package/@snowpack/plugin-typescript */
        ...(process.versions.pnp ? { tsc: 'yarn pnpify tsc' } : {}),
      },
    ],
  ],
  routes: [
    /* Enable an SPA Fallback in development: */
    {"match": "routes", "src": ".*", "dest": "/index.html"},
  ],
  optimize: {
    /* Example: Bundle your final build: */
    // "bundle": true,
  },
  packageOptions: {
    knownEntrypoints: [
      "@apollo/client/utilities",
      "@emotion/cache",
      "@emotion/css",
      "@emotion/is-prop-valid",
      "@emotion/serialize",
      "@emotion/sheet",
      "@emotion/utils",
      "@linaria/core",
      "@remirror/pm",
      "@remirror/pm/commands",
      "@remirror/pm/gapcursor",
      "@remirror/pm/history",
      "@remirror/pm/inputrules",
      "@remirror/pm/keymap",
      "@remirror/pm/model",
      "@remirror/pm/paste-rules",
      "@remirror/pm/schema-list",
      "@remirror/pm/state",
      "@remirror/pm/suggest",
      "@remirror/pm/tables",
      "@remirror/pm/transform",
      "@remirror/pm/view",
      "escape-string-regexp",
      "fast-deep-equal",
      "fast-deep-equal/react",
      "is-buffer",
      "prop-types",
      "react-is",
      "react/jsx-runtime",
      "reakit-system/createComponent",
      "reakit-system/createHook",
      "reakit-system/SystemProvider",
      "reakit-system/useCreateElement",
      "reakit-system/useToken",
      "reakit-utils/applyState",
      "reakit-utils/canUseDOM",
      "reakit-utils/closest",
      "reakit-utils/contains",
      "reakit-utils/createEvent",
      "reakit-utils/createOnKeyDown",
      "reakit-utils/dom",
      "reakit-utils/ensureFocus",
      "reakit-utils/fireBlurEvent",
      "reakit-utils/fireEvent",
      "reakit-utils/fireKeyboardEvent",
      "reakit-utils/flatten",
      "reakit-utils/getActiveElement",
      "reakit-utils/getDocument",
      "reakit-utils/getNextActiveElementOnBlur",
      "reakit-utils/hasFocusWithin",
      "reakit-utils/isButton",
      "reakit-utils/isEmpty",
      "reakit-utils/isInteger",
      "reakit-utils/isObject",
      "reakit-utils/isPlainObject",
      "reakit-utils/isPortalEvent",
      "reakit-utils/isPromise",
      "reakit-utils/isSelfTarget",
      "reakit-utils/isTextField",
      "reakit-utils/normalizePropsAreEqual",
      "reakit-utils/removeIndexFromArray",
      "reakit-utils/removeItemFromArray",
      "reakit-utils/shallowEqual",
      "reakit-utils/splitProps",
      "reakit-utils/tabbable",
      "reakit-utils/toArray",
      "reakit-utils/useForkRef",
      "reakit-utils/useIsomorphicEffect",
      "reakit-utils/useLiveRef",
      "reakit-utils/useSealedState",
      "reakit-utils/useUpdateEffect",
    ]
  },
  devOptions: {
    port: 3000
  },
  buildOptions: {
    /* ... */
  },
};